@using RenderingLayoutProcessor.Extension;
@model DummyBlock
@{
    var blockMetaData = Html.BlockMetaData();
    var uniqueId = string.Format("dummyblock-{0}-{1}-{2}", blockMetaData.ContentLink.ID, blockMetaData.Index, blockMetaData.ParentMetaData.Index);
}
<div id="@uniqueId" @Html.Raw(blockMetaData.BlockMetaDataDictionary().ToAttributes())>
    <strong>Dummy block</strong><br/>
    <label for="@(uniqueId + "-checkbox")" role="button">Toggle metadata</label>
    <input type="checkbox" id="@(uniqueId + "-checkbox")" hidden/>
    
    <table class="table-debug" style="" cellpadding="3">
        <tr><th>Block Type:</th><td>@blockMetaData.GetContentTypeName()</td></tr>
        <tr><th>Block Index:</th><td>@blockMetaData.Index</td></tr>
        <tr><th>Block Content ID</th><td>@blockMetaData.ContentLink.ID</td></tr>
        <tr><th>Block Content Guid</th><td style="text-overflow: ellipsis;overflow: hidden;white-space: nowrap;">@blockMetaData.ContentGuid</td></tr>
        <tr><th>Layout Type:</th><td>@blockMetaData.ParentMetaData.GetContentTypeName()</td></tr>
        <tr><th>Layout Index</th><td>@blockMetaData.ParentMetaData.Index</td></tr>
        <tr><th>Layout Content ID</th><td>@blockMetaData.ParentMetaData.ContentLink.ID</td></tr>
        <tr><th>Layout Content Guid</th><td style="text-overflow: ellipsis;overflow: hidden;white-space: nowrap;">@blockMetaData.ParentMetaData.ContentGuid</td></tr>
    </table>
</div>
<style>
#@uniqueId {
    background-color: #0dcaf0; 
    padding: 1rem; 
    margin: 1rem;
}
#@uniqueId label {
    cursor:pointer;
}
#@uniqueId table {
    font-size:0.8em;
    table-layout:fixed;
    width: 100%;
}

#@uniqueId input:not(:checked) + table {
    display:none;
}
</style>